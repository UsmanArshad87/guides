sudo apt update && sudo apt upgrade -y;


useful apps:
ack;


sudo apt install -y apache2;

service apache2 start;


Elastic Search:
===============
sudo apt install openjdk-8-jdk -y;

java -version

sudo apt install curl -y;

curl -fsSL https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -

echo "deb https://artifacts.elastic.co/packages/7.x/sudo apt stable main" | sudo tee -a /etc/apt/sources.list.d/elastic-7.x.list



for 22
curl -fsSL https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo gpg --dearmor -o /usr/share/keyrings/elastic.gpg

echo "deb [signed-by=/usr/share/keyrings/elastic.gpg] https://artifacts.elastic.co/packages/7.x/apt stable main" | sudo tee -a /etc/apt/sources.list.d/elastic-7.x.list

sudo apt update

sudo apt install elasticsearch

sudo nano /etc/elasticsearch/elasticsearch.yml

network.host, uncomment it, and replace its value with localhost so it reads like this:
network.host: localhost


sudo apt install openjdk-11-jdk
wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.14.0-amd64.deb
sudo dpkg -i elasticsearch-7.14.0-amd64.deb
sudo nano /etc/elasticsearch/elasticsearch.yml
sudo systemctl start elasticsearch

sudo systemctl enable elasticsearch

http://localhost:9200



sudo apt update && sudo apt upgrade -y;

sudo apt install elasticsearch -y;

service elasticsearch start;

curl -X GET 'http://localhost:9200'

Add port:

nano /etc/apache2/ports.conf

Listen 8080

curl -X GET 'http://localhost:9200'


MySQL:
======
sudo apt install mysql-server -y;

service mysql start;

Create user for Magneto2:

sudo mysql -u root -p

CREATE USER 'm2root'@'localhost' IDENTIFIED BY '1';

ALTER USER 'm2root'@'localhost' IDENTIFIED WITH mysql_native_password BY '1';

GRANT ALL PRIVILEGES ON *.* TO 'm2root'@'localhost' WITH GRANT OPTION;

mysql -u m2root -p


Install PHP and necessary extensions for Magento:
=================================================
sudo apt update && sudo apt upgrade -y;

sudo apt install apache2 libapache2-mod-fcgid -y;

sudo apt install software-properties-common -y;

sudo add-apt-repository ppa:ondrej/php;

sudo apt update && sudo apt upgrade -y;

sudo apt install php8.1 php8.1-common php8.1-cli php8.1-fpm php8.1-mbstring php8.1-xml php8.1-gd php8.1-curl php8.1-zip php8.1-mysql php8.1-intl php8.1-soap php8.1-bcmath libapache2-mod-php8.1 -y;

sudo apt update && sudo apt upgrade -y;

sudo a2enmod proxy_fcgi setenvif
sudo a2enconf php8.1-fpm

NOTICE: Not enabling PHP 8.1 FPM by default.
NOTICE: To enable PHP 8.1 FPM in Apache2 do:
NOTICE: a2enmod proxy_fcgi setenvif
NOTICE: a2enconf php8.1-fpm

https://www.php.net/supported-versions.php


Install Composer:
=================

sudo apt install zip -y; sudo apt install unzip -y;

cd ~
curl -sS https://getcomposer.org/installer -o /tmp/composer-setup.php

HASH=`curl -sS https://composer.github.io/installer.sig`

php -r "if (hash_file('SHA384', '/tmp/composer-setup.php') === '$HASH') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"

sudo php /tmp/composer-setup.php --install-dir=/usr/local/bin --filename=composer

Credentials:
php /usr/local/bin/composer
/root/.config/composer/auth.json


Node version manager:
=====================

https://github.com/nvm-sh/nvm

curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash

export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm

command -v nvm

nvm i --lts



Note:
=====

System requirements
https://experienceleague.adobe.com/docs/commerce-operations/installation-guide/system-requirements.html

Set tools versions respective to requirements

Useful other commands on need:

To uninstall:
wsl --list
wsl --unregister Ubuntu-20.04




First time WSL Installations:
=============================

Manual installation steps for older versions of WSL
https://docs.microsoft.com/en-us/windows/wsl/install-manual

Check requirements for running WSL 2
Build 19041 or higher

Step 1 - Enable the Windows Subsystem for Linux
dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart
Restart your machine

Step 2 - Enable Virtual Machine feature
dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart
Restart your machine

Step 3 - Download the Linux kernel update package
https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi

Step 4 - Set WSL 2 as your default version
wsl --set-default-version 2

Step 5 - Install your Linux distribution of choice

wsl -l -o
wsl --install -d Ubuntu-22.04
wsl --unregister <DistroName>
wsl --setdefault <DistroName>


Linux Issues:
Release file for http://archive.ubuntu.com/ubuntu/dists/focal-updates/InRelease is not valid yet (invalid for another 10h 41min 41s). Updates for this repository will not be applied.

hwclock --hctosys
sudo apt install ntp
dpkg-reconfigure tzdata
service ntp restart
apt-get -o Acquire::Check-Valid-Until=false -o Acquire::Check-Date=false update
sudo apt update
sudo apt dist-upgrade


MySQL Issues:
=============
su: warning: cannot change directory to /nonexistent: No such file or directory

Solution:
service mysql stop
usermod -d /var/lib/mysql/ mysql
service mysql start


Elastic Search Issues:
=======================
java.lang.IllegalArgumentException: Plugin [analysis-icu] was built for Elasticsearch version 7.17.2 but version 7.17.4 is running
/usr/share/elasticsearch/bin/elasticsearch-plugin remove analysis-phonetic
/usr/share/elasticsearch/bin/elasticsearch-plugin install analysis-phonetic
service elasticsearch restart